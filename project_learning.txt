1=> always wrap a navbar or a main div or component inside a container so we can just add the width to it 
    and wrap all the elements inside the container.

2=> always add a css reset on * and use box-sizing- border-box so we can work properly with height and width

3 => always use width:100% to the image so it can be fit to it's container and can not grow eventaully as per size 

4 => flex-direction defines the what will be the main axis of flex;

justify-content works on main axios horizontal
align-items works on verticle axis or cross axis

flex-direction : row 
verticle axis => align items
horizontal axis => justify content;

flex-direction : column 
verticle axis => justify-content
horizontal axis => align-items

space between => this take the space remaining and put between the elements if there is two the two elements were one on left and one on right

we can create utility class and changes its single property based on parent element or container

5 => always go for css variables as they aviod code repetation and provide scalability in sense of changes and other stuff

6. grid => grid template column used to set the size of the grid elements

7. gap => is used to set the gap between to CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA

8 => utilize the difference css selectors which makes your life more easier;

.showcase-form input[type="text"],
.showcase-form input[type="email"] to skip any another input field

if the element or container has position relative then the child or the after or before selector have position absolute to them;

can be used native transform skew to create the skew or the dyncamic lines 

to work the properties to all over different the browers 
we can use webkit

  -webkit-transform: skewY(-3deg) ; chrome and firefox
    -moz-transform: skewY(-3deg) ; // safari
    -ms-transform: skewY(-3deg) ; // microsoft

9 => to move the div or contains a bit down use padding top;

10 => we should create the utilities css to add the common styles and create utility classes 

.grid{
    display: grid;
    grid-template-columns: repeat(2,1fr);
    gap:20px;
    justify-content: center;
    align-items: center;
    height: 100%;
    /* height: 100%; takes the total height of it's parent */ 
}

.grid-3{
    grid-template-columns: repeat(3,1fr);
}